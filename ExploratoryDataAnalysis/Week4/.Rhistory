x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
x<-4
y<-2
cbind(x,y)
y<-NULL
y[!is.null]
y<-NULL
is.null(y)
!is.null(y)
library(lattice)
library(askpass)
detach("package:askpass", unload = TRUE)
library(lattice)
library(datasets)
xyplot(ozone~wind,data = datasets)
xyplot(ozone~wind,data = airquality)
xyplot(Ozone~Wind,data = airquality)
airquality
f<-rep(0:1,each=50)
f
length(f)
f<-rep(0:2,each=50)
f
length(f)
f<-rep(1:0,each=50)
f
length(f)
x<-nrom(100)
x<-rnom(100)
x<-rnorm(100)
x
length(x)
5->x
x
5=x
f<-rep(1:2,each=5)
f
f<-factor(f)
f
set.seed(1234)
set.seed(12345)
par(mar=rep(0.2,4))
data<-matrix(norm(400),nrow = 40)
data<-matrix(rnorm(400),nrow = 40)
View(data)
data<-matrix(rnorm(400),nrow = 10)
data<-matrix(rnorm(400),nrow = 40)
image(1:10,1:40,t(data)[,nrow(data):1])
heatmap(data)
dataMatrix<-matrix(100,nrow=10,ncol=10)
View(dataMatrix)
heatmap(dataMatrix)
image(1:10,1:10,t(dataMatrix)[,nrow(dataMatrix):1])
x<-1:2
class(x)
x<-list(1:2)
x
class(x)
x[1]
x[[1]]
x$1
matrix<-matrix()
View(matrix)
for(i in 1:matrix){}
for(i in 1:matrix){
matrix[i,]<-rep(1:3,4)
}
for(i in 1:length(matrix){
matrix[i,]<-rep(1:3,4)
}
for(i in 1:length(matrix)){
matrix[i,]<-rep(1:3,4)
}
View(matrix)
for(i in matrix{
matrix[i,]<-rep(1:3,4)
}
for(i in matrix{
matrix[i,]<-rep(1:3,4)
}
i=1
for(i in 1:40){
print(i)
}
for(i in 10:12)
for(i in 10:12){
print(i)
}
for(i in 5:7){
print(i)
}
x<-matrix(data=c(1,2,3,4),2,2)
View(x)
x<-matrix(data=c(2,3,4,5),2,2)
x[,1]
for(i in x){
print(i)
}
for(i in x){
print(x[i,])
}
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
rbinom(1,1,0.5)
for(i in x){
print(x[i,])
}
for(i in x){
print(x[i,])
}
for(i in x){
print(x[i,])
}
rbinom(1,1,0.5)
for(i in x){
print(x[i,])
}
rnorm(1,1,0.5)
rnorm(1,1,0.5)
rnorm(1,1,0.5)
rnorm(1,1,0.5)
rnorm(1,1,0.5)
rnorm(1,1,0.5)
rnorm(1,1,0.5)
seq(1,2,length(=10))
seq(1,2,length=10)
R.version.string
library(iris)
library("iris")
library(datasets)
data("iris")
?iris
head(iris)
lapply(iris,function(x) colMeans[x,sepal.Length])
lapply(iris,function(x) colMeans[x,Sepal.Length])
sapply(split(iris,iris$Sepal.Length,mean))
sapply(split(iris,iris$Sepal.Length,function(x) mean))
sapply(split(iris,iris$Sepal.Length,function(x) mean))
iris_dt <- as.data.table(iris)
iris_dt[Species == "virginica",round(mean(Sepal.Length)) ]
iris_dt <- as.data.table(iris)
iris_dt[Species == "virginica",round(mean(Sepal.Length)) ]
iris_dt <- as.data.table(iris)
iris_dt[Speies == "virginica",round(mean(Sepal.Length)) ]
iris_dt <- as.data.table(iris)
iris_dt <-read.table(iris)
library(datasets)
iris
data<-iris
summary(data)
data[Species="virginica",round(mean("Sepal.Length"))]
data[Species=="virginica",round(mean("Sepal.Length"))]
data[Species=="virginica",na.rm=T,round(mean("Sepal.Length"))]
data[Species=="virginica",na.rm=T,round(mean("Sepal.Length"))]
read.table(iris)
read.data(iris)
library(data.table)
iris_dt <- as.data.table(iris)
iris_dt[Species == "virginica",round(mean(Sepal.Length)) ]
makeCacheMatrix <- function(x = matrix()) {
m<-NULL
set<-function(y){
x<<-y
m<<-NULL
}
get<-function()x
setinverse<-function(invMatrix)m<<-invMatrix
getinverse<-function()m
list(set=set,get=get,
setinverse=setinverse,
getinverse=getinverse)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
m<-x$getinverse()
if(!is.na(m)){
## Return a matrix that is the inverse of 'x'
message("getting cached data")
return (m)
}
data<-x$get()
m<-solve(data,...)
x$setinverse(m)
m
}
f<-makeCacheMatrix(matrix(1:8,2,3))
f
f$get()
f$set()
f$getinverse(
f$getinverse()
f$getinverse()
f$getinverse()
f<-makeCacheMatrix(matrix(1:8,2,3))
f$getinverse()
f$get
f<-makeCacheMatrix(matrix(1:8,2,3))
f$get
f$get()
f$getinverse()
## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
##makeCacheMatrix consists of set,get,getinverse and setinverse
makeCacheMatrix <- function(x = matrix()) {
m<-NULL
set<-function(y){
x<<-y
m<<-NULL
}
get<-function()x
setinverse<-function(invMatrix)m<<-invMatrix
getinverse<-function(){
inver<-ginv(x)
inver%*%x
}
list(set=set,get=get,
setinverse=setinverse,
getinverse=getinverse)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
m<-x$getinverse()
if(!is.na(m)){
## Return a matrix that is the inverse of 'x'
message("getting cached data")
return (m)
}
data<-x$get()
m<-solve(data,...)
x$setinverse(m)
m
}
f<makeCacheMatrix(matrix(1:8,3,7))
f<-makeCacheMatrix(matrix(1:8,3,7))
f$get()
f$getinverse()
library(MASS)
f$getinverse()
MASS?
?MASS
help(MASS)
??MASS
dir()
setwd("C:/Users/HP/Desktop/R/datasciencecourseraGit/ExploratoryDataAnalysis/Week4")
dir()
gc()
NEI<- readRDS("summarySCC_PM25.rds")
NEI<- readRDS("summarySCC_PM25.rds")
View(NEI)
SCC<-readRDS("Source_Classification_Code.rds")
totalemissionByYear<-NEi %>% groupByYear(year) %>% summarize(totalEmission=sum(Emissions,na.rm=T))
totalemissionByYear<-NEi
%>% groupByYear(year) %>%
summarize(totalEmission=sum(Emissions,na.rm=T))
totalemissionByYear<-NEi
%>% groupByYear(year) %>%
summarize(totalEmission=sum(Emissions,na.rm=T))
emissions_by_year <- NEI %>%
group_by(year) %>%
summarize(total_emissions = sum(Emissions))
library(dplyr)
totalemissionByYear<-NEi %>% groupByYear(year) %>% summarize(totalEmission=sum(Emissions,na.rm=T))
totalemissionByYear<-NEi %>% group_by(year) %>% summarize(totalEmission=sum(Emissions,na.rm=T))
totalemissionByYear<-NEI %>% group_by(year) %>% summarize(totalEmission=sum(Emissions,na.rm=T))
totalemissionByYear
with(totalemissionByYear,barplot(totalEmission))
with(totalemissionByYear,barplot(totalEmission,names.arg=year))
with(totalemissionByYear,barplot(totalEmission))
with(totalemissionByYear,barplot(totalEmission,names.arg=year))
with(totalemissionByYear,barplot(totalEmission,names.arg=year,xlab=years))
with(totalemissionByYear,barplot(totalEmission,names.arg=year,xlab="years"))
with(totalemissionByYear,barplot(totalEmission,names.arg=year,xlab="years",ylab=pm25))
with(totalemissionByYear,barplot(totalEmission,names.arg=year,xlab="years",ylab="pm25"))
with(totalemissionByYear,barplot(totalEmission,names.arg=year,xlab="years",ylab="PM2.5 Emissions (tons)"))
with(totalemissionByYear,barplot(totalEmission,names.arg=year,xlab="years",ylab="PM2.5 Emissions (tons)",main = "Total PM2.5 Emissions from All Sources"))
totalemissionByYear<-NEI %>% group_by(year)%>% summarize(totalEmissions=sum(EMissions,na.rm=T))
with(totalemissionByYear,barplot(totalEmissions,name.args=year,xlab="Year",ylab="PM2.5 Emissions(tons)",main="TOtal EMissions from all sources"))
totalemissionByYear<-NEI %>% group_by(year)%>% summarize(totalEmissions=sum(Emissions,na.rm=T))
with(totalemissionByYear,barplot(totalEmissions,name.args=year,xlab="Year",ylab="PM2.5 Emissions(tons)",main="TOtal EMissions from all sources"))
totalemissionByYear<-NEI %>% group_by(year)%>% summarize(totalEmissions=sum(EMissions,na.rm=T))
with(totalemissionByYear,barplot(totalEmissions,names.args=year,xlab="Year",ylab="PM2.5 Emissions(tons)",main="TOtal EMissions from all sources"))
totalemissionByYear<-NEI %>% group_by(year)%>% summarize(totalEmissions=sum(EMissions,na.rm=T))
with(totalemissionByYear,barplot(totalEmissions,names.arg=year,xlab="Year",ylab="PM2.5 Emissions(tons)",main="TOtal EMissions from all sources"))
totalemissionByYear<-NEI %>% group_by(year)%>% summarize(totalEmissions=sum(EMissions,na.rm=T))
with(totalemissionByYear,barplot(totalEmissions,names.arg=year,xlab="Year",ylab="PM2.5 Emissions(tons)",main="TOtal EMissions from all sources"))
png("Plot1.png")
dev.off()
View(SCC)
totalEmissionInBaltimore<-NEi %>% subset(fips == "24510") %>% group_by(year),summarise=(totalEmission=sum(Emissions,na.rm=T))
totalEmissionInBaltimore<-NEi %>% subset(fips == "24510") %>% group_by(year)%>%summarise=(totalEmission=sum(Emissions,na.rm=T))
with(totalemissionByYear,barplot(totalEmission,names.arg=year,xlab = "Year", ylab = "PM2.5 Emissions (tons)", main = "Total PM2.5 Emissions from Baltimore City Sources"))
totalEmissionInBaltimore<-NEi %>% subset(fips == "24510") %>% group_by(year)%>%summarise=(totalEmission=sum(Emissions,na.rm=T))
with(totalEmissionInBaltimore,barplot(totalEmission,names.arg=year,xlab = "Year", ylab = "PM2.5 Emissions (tons)", main = "Total PM2.5 Emissions from Baltimore City Sources"))
totalEmissionInBaltimore<-NEi %>% subset(fips == "24510") %>% group_by(year)%>%summarise=(totalEmission=sum(Emissions,na.rm=T))
with(totalEmissionInBaltimore,barplot(totalEmission,names.arg=year,xlab = "Year", ylab = "PM2.5 Emissions (tons)", main = "Total PM2.5 Emissions from Baltimore City Sources"))
totalEmissionInBaltimore<-NEi %>% subset(fips == "24510") %>% group_by(year)%>%summarise=(totalEmission=sum(Emissions,na.rm=T))
library(dplyr)
NEI<- readRDS("summarySCC_PM25.rds")
SCC<-readRDS("Source_Classification_Code.rds")
SCC<-readRDS("Source_Classification_Code.rds")
totalEmissionInBaltimore<-NEi %>% subset(fips == "24510") %>% group_by(year)%>%summarise=(totalEmission=sum(Emissions,na.rm=T))
tot.emissions.baltimore <- NEI %>%
subset(fips == "24510") %>%
group_by(year) %>%
summarize(Total.Emissions.Baltimore = sum(Emissions,
tot.emissions.baltimore <- NEI %>%
subset(fips == "24510") %>%
group_by(year) %>%
summarize(Total.Emissions.Baltimore = sum(Emissions,na.rm=T)
tot.emissions.baltimore <- NEI %>%
subset(fips == "24510") %>%
group_by(year) %>%
summarize(Total.Emissions.Baltimore = sum(Emissions,
na.rm = TRUE))
tot.emissions.baltimore <- NEI %>%
subset(NEI$fips == "24510") %>%
group_by(year) %>%
summarize(Total.Emissions.Baltimore = sum(Emissions,
na.rm = TRUE))
with(tot.emissions.baltimore,
plot(x = year,
y = Total.Emissions.Baltimore,
ylab = "Total Annual Emissions [Tons]",
xlab = "Year",
main = "Total Annual Emissions in Baltimore by Year",
cex = 2,
pch = 2,
col = "red",
lwd = 3))
totalEmissionInBaltimore<-NEi %>% subset(NEI$fips == "24510") %>% group_by(year)%>%summarise=(totalEmission=sum(Emissions,na.rm=T))
totalEmissionInBaltimore<-NEi %>% subset(NEI$fips == "24510") %>% group_by(year)%>%summarise(totalEmission=sum(Emissions,na.rm=T))
totalEmissionInBaltimore<-NEI %>% subset(NEI$fips == "24510") %>% group_by(year)%>%summarise(totalEmission=sum(Emissions,na.rm=T))
with(totalEmissionInBaltimore,barplot(totalEmission,names.arg=year,xlab = "Year", ylab = "PM2.5 Emissions (tons)", main = "Total PM2.5 Emissions from Baltimore City Sources"))
png("Plot2.png")
dev.off()
totalEmissionInBaltimore<-NEI %>% subset(NEI$fips == "24510") %>% group_by(year)%>%summarise(totalEmission=sum(Emissions,na.rm=T))
totalEmissionInBaltimore$year<-as.factor(totalEmissionInBaltimore$year)
ggplot(totalEmissionInBaltimore,aes(x=year,y=totalEmission))
library(ggplot2)
totalEmissionInBaltimore<-NEI %>% subset(NEI$fips == "24510") %>% group_by(year)%>%summarise(totalEmission=sum(Emissions,na.rm=T))
totalEmissionInBaltimore$year<-as.factor(totalEmissionInBaltimore$year)
ggplot(totalEmissionInBaltimore,aes(x=year,y=totalEmission))
ggplot(totalEmissionInBaltimore,aes(x=year,y=totalEmission))+geom_bar(stat = "identity")+facet_grid(.~type)+labs(x="Year", y="PM2.5 Emissions (tons)") + ggtitle("Baltimore City PM2.5 Emissions by Type")
totalEmissionInBaltimore<-NEI %>% subset(NEI$fips == "24510") %>% group_by(year)%>%summarise(totalEmission=sum(Emissions,na.rm=T))
totalEmissionInBaltimore$year<-as.factor(totalEmissionInBaltimore$year)
ggplot(totalEmissionInBaltimore,aes(x=year,y=totalEmission))+geom_bar(stat = "identity")+facet_grid(.~type)+labs(x="Year", y="PM2.5 Emissions (tons)") + ggtitle("Baltimore City PM2.5 Emissions by Type")
rlang::last_error()
ggplot(totalEmissionInBaltimore, aes(x=year, y=totalEmissions)) + geom_bar(stat="identity") + facet_grid(. ~ type) + labs(x="Year", y="PM2.5 Emissions (tons)") + ggtitle("Baltimore City PM2.5 Emissions by Type")
qplot(Year, Emissions, data = totalEmissionInBaltimore, color = Type, geom = "line") +
ggtitle("Total Emissions of PM2.5 in Baltimore City By pollutant type") +
ylab("Total Emissions (tons)") +
xlab("Year")
qplot(year, Emissions, data = totalEmissionInBaltimore, color = Type, geom = "line") +
ggtitle("Total Emissions of PM2.5 in Baltimore City By pollutant type") +
ylab("Total Emissions (tons)") +
xlab("Year")
qplot(NEI$Year, NEI$Emissions, data = totalEmissionInBaltimore, color = Type, geom = "line") +
ggtitle("Total Emissions of PM2.5 in Baltimore City By pollutant type") +
ylab("Total Emissions (tons)") +
xlab("Year")
library(dplyr)
library(ggplot2)
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
emissions_by_year <- NEI %>%
filter(fips == "24510") %>%
group_by(year, type) %>%
summarize(total_emissions = sum(Emissions))
emissions_by_year$year <- as.factor(emissions_by_year$year)
ggplot(emissions_by_year
ggplot(emissions_by_year, aes(x=year, y=total_emissions)) + geom_bar(stat="identity") + facet_grid(. ~ type) + labs(x="Year", y="PM2.5 Emissions (tons)") + ggtitle("Baltimore City PM2.5 Emissions by Type")
ggplot(emissions_by_year, aes(x=year, y=total_emissions)) + geom_bar(stat="identity") + facet_grid(. ~ type) + labs(x="Year", y="PM2.5 Emissions (tons)") + ggtitle("Baltimore City PM2.5 Emissions by Type")
totalEmissionInBaltimore<-NEI %>% subset(NEI$fips == "24510") %>% group_by(year,type)%>%summarise(totalEmission=sum(Emissions,na.rm=T))
totalEmissionInBaltimore$year<-as.factor(totalEmissionInBaltimore$year)
ggplot(totalEmissionInBaltimore,aes(x=year,y=totalEmission))+geom_bar(stat = "identity")+facet_grid(.~type)+labs(x="Year", y="PM2.5 Emissions (tons)") + ggtitle("Baltimore City PM2.5 Emissions by Type")
png("Plot3.png")
dev.off(0)
coal <- SCC %>% filter(grepl("coal", EI.Sector, ignore.case=TRUE)) %>% select(SCC)
totalemissionByYear <- NEI %>% subset(SCC %in% coal$SCC) %>% group_by(year) %>% summarize(totalemissions = sum(Emissions,na.rm=T))
totalemissionByYear$year <- as.factor(totalemissionByYear$year)
ggplot(totalemissionByYear, aes(x=year, y=totalemissions)) + geom_bar(stat="identity") + labs(x="Year", y="PM2.5 Emissions (tons)") + ggtitle("US PM2.5 Emissions from Coal Related Sources")
ggplot(totalemissionByYear, aes(x=year, y=totalemissions)) + geom_bar(stat="identity") + labs(x="Year", y="PM2.5 Emissions (tons)") + ggtitle("US PM2.5 Emissions from Coal Related Sources")
ggplot(totalemissionByYear, aes(x=year, y=totalemissions)) + geom_bar(stat="identity") + labs(x="Year", y="PM2.5 Emissions (tons)") + ggtitle("US PM2.5 Emissions from Coal Related Sources")
dev.current()
dev.set(2)
ggplot(totalemissionByYear, aes(x=year, y=totalemissions)) + geom_bar(stat="identity") + labs(x="Year", y="PM2.5 Emissions (tons)") + ggtitle("US PM2.5 Emissions from Coal Related Sources")
coal <- SCC %>% filter(grepl("coal", EI.Sector, ignore.case=TRUE)) %>% select(SCC)
totalemissionByYear <- NEI %>% subset(SCC %in% coal$SCC) %>% group_by(year) %>% summarize(totalemissions = sum(Emissions,na.rm=T))
totalemissionByYear$year <- as.factor(totalemissionByYear$year)
ggplot(totalemissionByYear, aes(x=year, y=totalemissions)) + geom_bar(stat="identity") + labs(x="Year", y="PM2.5 Emissions (tons)") + ggtitle("US PM2.5 Emissions from Coal Related Sources")
ggplot(emissions_by_year, aes(x=year, y=total_emissions)) + geom_bar(stat="identity") + facet_grid(. ~ type) + labs(x="Year", y="PM2.5 Emissions (tons)") + ggtitle("Baltimore City PM2.5 Emissions by Type")
dev.set(2)
dev.off()
dev.set()
dev.current()
dev.off()
ggplot(emissions_by_year, aes(x=year, y=total_emissions)) + geom_bar(stat="identity") + facet_grid(. ~ type) + labs(x="Year", y="PM2.5 Emissions (tons)") + ggtitle("Baltimore City PM2.5 Emissions by Type")
ggplot(totalemissionByYear, aes(x=year, y=totalemissions)) + geom_bar(stat="identity") + labs(x="Year", y="PM2.5 Emissions (tons)") + ggtitle("US PM2.5 Emissions from Coal Related Sources")
png("plot4.png")
totalemissionByYear <- NEI %>% subset(fips == "24510" & type == "ON-ROAD") %>% group_by(year) %>% summarize(totalemissions = sum(Emissions,na.rm=T))
totalemissionByYear$year <- as.factor(totalemissionByYear$year)
ggplot(totalemissionByYear, aes(x=year, y=totalemissions)) + geom_bar(stat="identity") + labs(x="Year", y="PM2.5 Emissions (tons)") + ggtitle("Baltimore City PM2.5 Emissions from Vehicle Related Sources")
dev.off()
dev.off()
ggplot(totalemissionByYear, aes(x=year, y=totalemissions)) + geom_bar(stat="identity") + labs(x="Year", y="PM2.5 Emissions (tons)") + ggtitle("Baltimore City PM2.5 Emissions from Vehicle Related Sources")
png("Plot5.png")
totalemissionByYear <- NEI %>% subset(fips %in% c("24510" ,"06037") & type == "ON-ROAD") %>% group_by(year,flips) %>% summarize(totalemissions = sum(Emissions,na.rm=T))
totalemissionByYear$year <- as.factor(totalemissionByYear$year)
totalemissionByYear$countyName <- factor(totalemissionByYear$fips, levels=c("06037", "24510"), labels=c("Los Angeles County", "Baltimore City"))
ggplot(totalemissionByYear, aes(x=year, y=totalemissions)) + geom_bar(stat="identity") + labs(x="Year", y="PM2.5 Emissions (tons)") +ggtitle("Vehicle PM2.5 Emissions - Baltimore City and LA County")
totalemissionByYear <- NEI %>% subset(fips %in% c("24510" ,"06037") & type == "ON-ROAD") %>% group_by(year,fips) %>% summarize(totalemissions = sum(Emissions,na.rm=T))
totalemissionByYear$year <- as.factor(totalemissionByYear$year)
totalemissionByYear$countyName <- factor(totalemissionByYear$fips, levels=c("06037", "24510"), labels=c("Los Angeles County", "Baltimore City"))
ggplot(totalemissionByYear, aes(x=year, y=totalemissions)) + geom_bar(stat="identity") + labs(x="Year", y="PM2.5 Emissions (tons)") +ggtitle("Vehicle PM2.5 Emissions - Baltimore City and LA County")
dev.off()
dev.off()
totalemissionByYear <- NEI %>% subset(fips %in% c("24510" ,"06037") & type == "ON-ROAD") %>% group_by(year,fips) %>% summarize(totalemissions = sum(Emissions,na.rm=T))
totalemissionByYear$year <- as.factor(totalemissionByYear$year)
totalemissionByYear$countyName <- factor(totalemissionByYear$fips, levels=c("06037", "24510"), labels=c("Los Angeles County", "Baltimore City"))
ggplot(totalemissionByYear, aes(x=year, y=totalemissions)) + geom_bar(stat="identity") + labs(x="Year", y="PM2.5 Emissions (tons)") +ggtitle("Vehicle PM2.5 Emissions - Baltimore City and LA County")
png("Plot6.png")
ggplot(totalemissionByYear, aes(x=year, y=totalemissions)) + geom_bar(stat="identity") + labs(x="Year", y="PM2.5 Emissions (tons)") + ggtitle("Baltimore City PM2.5 Emissions from Vehicle Related Sources")
ggplot(totalemissionByYear, aes(x=year, y=totalemissions)) + geom_bar(stat="identity") + labs(x="Year", y="PM2.5 Emissions (tons)") + ggtitle("Baltimore City PM2.5 Emissions from Vehicle Related Sources")
dev.off()
ggplot(totalemissionByYear, aes(x=year, y=totalemissions)) + geom_bar(stat="identity") + labs(x="Year", y="PM2.5 Emissions (tons)") + ggtitle("Baltimore City PM2.5 Emissions from Vehicle Related Sources")
dev.off()
ggplot(totalemissionByYear, aes(x=year, y=totalemissions)) + geom_bar(stat="identity") + labs(x="Year", y="PM2.5 Emissions (tons)") + ggtitle("US PM2.5 Emissions from Coal Related Sources")
dev.off()
ggplot(totalemissionByYear, aes(x=year, y=totalemissions)) + geom_bar(stat="identity") + labs(x="Year", y="PM2.5 Emissions (tons)") + ggtitle("Baltimore City PM2.5 Emissions from Vehicle Related Sources")
dev.off()
ggplot(totalemissionByYear, aes(x=year, y=totalemissions)) + geom_bar(stat="identity") + labs(x="Year", y="PM2.5 Emissions (tons)") +ggtitle("Vehicle PM2.5 Emissions - Baltimore City and LA County")
dev.off()
ggplot(totalemissionByYear, aes(x=year, y=totalemissions)) + geom_bar(stat="identity") + labs(x="Year", y="PM2.5 Emissions (tons)") + ggtitle("Baltimore City PM2.5 Emissions from Vehicle Related Sources")
ggplot(totalemissionByYear, aes(x=year, y=totalemissions)) +    geom_bar(stat="identity", aes(fill=county_name), position = "dodge") +
guides(fill=guide_legend(title=NULL)) +
labs(x="Year", y="PM2.5 Emissions (tons)") +
ggtitle("Vehicle PM2.5 Emissions - Baltimore City and LA County") +
theme(legend.position="bottom")
png("Plot5.png")
ggplot(totalemissionByYear, aes(x=year, y=totalemissions)) + ggplot(totalemissionByYear, aes(x=year, y=totalemissions)) +    geom_bar(stat="identity", aes(fill=county_name), position = "dodge") +
guides(fill=guide_legend(title=NULL)) +
labs(x="Year", y="PM2.5 Emissions (tons)") +
ggtitle("Vehicle PM2.5 Emissions - Baltimore City and LA County") +
theme(legend.position="bottom")
ggplot(totalemissionByYear, aes(x=year, y=totalemissions)) + ggplot(totalemissionByYear, aes(x=year, y=totalemissions)) +    geom_bar(stat="identity", aes(fill=countyName), position = "dodge") +
guides(fill=guide_legend(title=NULL)) +
labs(x="Year", y="PM2.5 Emissions (tons)") +
ggtitle("Vehicle PM2.5 Emissions - Baltimore City and LA County") +
theme(legend.position="bottom")
emissions_by_year <- NEI %>%
filter(fips %in% c("24510", "06037") & type == "ON-ROAD") %>%
group_by(year, fips) %>%
summarize(total_emissions = sum(Emissions))
emissions_by_year$year <- as.factor(emissions_by_year$year)
emissions_by_year$county_name <- factor(emissions_by_year$fips, levels=c("06037", "24510"), labels=c("Los Angeles County", "Baltimore City"))
ggplot(emissions_by_year, aes(x=year, y=total_emissions)) +
geom_bar(stat="identity", aes(fill=county_name), position = "dodge") +
guides(fill=guide_legend(title=NULL)) +
labs(x="Year", y="PM2.5 Emissions (tons)") +
ggtitle("Vehicle PM2.5 Emissions - Baltimore City and LA County") +
theme(legend.position="bottom")
ggplot(emissions_by_year, aes(x=year, y=total_emissions)) + geom_bar(stat="identity", aes(fill=county_name), position = "dodge") +
labs(x="Year", y="PM2.5 Emissions (tons)") +
ggtitle("Vehicle PM2.5 Emissions - Baltimore City and LA County") +
theme(legend.position="bottom")
ggplot(emissions_by_year, aes(x=year, y=total_emissions)) + geom_bar(stat="identity", aes(fill=county_name), position = "dodge") +
labs(x="Year", y="PM2.5 Emissions (tons)") +
ggtitle("Vehicle PM2.5 Emissions - Baltimore City and LA County")
dev.off()
totalemissionByYear <- NEI %>% subset(fips == "24510" & type == "ON-ROAD") %>% group_by(year) %>% summarize(totalemissions = sum(Emissions,na.rm=T))
totalemissionByYear$year <- as.factor(totalemissionByYear$year)
ggplot(totalemissionByYear, aes(x=year, y=totalemissions)) + geom_bar(stat="identity") + labs(x="Year", y="PM2.5 Emissions (tons)") + ggtitle("Baltimore City PM2.5 Emissions from Vehicle Related Sources")
ggplot(totalemissionByYear, aes(x=year, y=totalemissions)) + geom_bar(stat="identity") + labs(x="Year", y="PM2.5 Emissions (tons)") + ggtitle("Baltimore City PM2.5 Emissions from Vehicle Related Sources")
dev.off()
dev.off()
ggplot(totalemissionByYear, aes(x=year, y=totalemissions)) + geom_bar(stat="identity") + labs(x="Year", y="PM2.5 Emissions (tons)") + ggtitle("Baltimore City PM2.5 Emissions from Vehicle Related Sources")
coal <- SCC %>% filter(grepl("coal", EI.Sector, ignore.case=TRUE)) %>% select(SCC)
totalemissionByYear <- NEI %>% subset(SCC %in% coal$SCC) %>% group_by(year) %>% summarize(totalemissions = sum(Emissions,na.rm=T))
totalemissionByYear$year <- as.factor(totalemissionByYear$year)
dev.off()
ggplot(totalemissionByYear, aes(x=year, y=totalemissions)) + geom_bar(stat="identity") + labs(x="Year", y="PM2.5 Emissions (tons)") + ggtitle("US PM2.5 Emissions from Coal Related Sources")
dev.off()
ggplot(totalEmissionInBaltimore,aes(x=year,y=totalEmission))+geom_bar(stat = "identity")+facet_grid(.~type)+labs(x="Year", y="PM2.5 Emissions (tons)") + ggtitle("Baltimore City PM2.5 Emissions by Type")
with(totalEmissionInBaltimore,barplot(totalEmission,names.arg=year,xlab = "Year", ylab = "PM2.5 Emissions (tons)", main = "Total PM2.5 Emissions from Baltimore City Sources"))
with(totalemissionByYear,barplot(totalEmissions,names.arg=year,xlab="Year",ylab="PM2.5 Emissions(tons)",main="TOtal EMissions from all sources"))
totalemissionByYear<-NEI %>% group_by(year)%>% summarize(totalEmissions=sum(EMissions,na.rm=T))
totalemissionByYear<-NEI %>% group_by(year)%>% summarize(totalEmissions=sum(Emissions,na.rm=T))
with(totalemissionByYear,barplot(totalEmissions,names.arg=year,xlab="Year",ylab="PM2.5 Emissions(tons)",main="TOtal EMissions from all sources"))
dev.off()
ggplot(emissions_by_year, aes(x=year, y=total_emissions)) + geom_bar(stat="identity", aes(fill=county_name), position = "dodge") +
labs(x="Year", y="PM2.5 Emissions (tons)") +
ggtitle("Vehicle PM2.5 Emissions - Baltimore City and LA County")
ggplot(emissions_by_year, aes(x=year, y=total_emissions)) + geom_bar(stat="identity", aes(fill=county_name), position = "dodge") +guides(fill=guide_legend(title=NULL)) +
labs(x="Year", y="PM2.5 Emissions (tons)") +
ggtitle("Vehicle PM2.5 Emissions - Baltimore City and LA County") +
theme(legend.position="bottom")
